<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Color definitions for dark mode -->
    <Color x:Key="WindowBackgroundColor">#333333</Color> <!-- Background color for the Window -->
    <Color x:Key="ControlBackgroundColor">#444444</Color> <!-- Background color for controls -->
    <Color x:Key="ControlForegroundColor">#FFFFFF</Color> <!-- Foreground (text) color -->
    <Color x:Key="ButtonHoverBackgroundColor">#555555</Color> <!-- Hover background color for buttons -->
    <Color x:Key="GridBackgroundColor">#3A3A3A</Color> <!-- Background color for the Grid -->

    <!-- Brush definitions -->
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource WindowBackgroundColor}"/>
    <SolidColorBrush x:Key="ControlBackgroundBrush" Color="{StaticResource ControlBackgroundColor}"/>
    <SolidColorBrush x:Key="ControlForegroundBrush" Color="{StaticResource ControlForegroundColor}"/>
    <SolidColorBrush x:Key="ButtonHoverBackgroundBrush" Color="{StaticResource ButtonHoverBackgroundColor}"/>
    <SolidColorBrush x:Key="GridBackgroundBrush" Color="{StaticResource GridBackgroundColor}"/>

    <!-- Common FocusVisualStyle for all controls -->
    <Style x:Key="CommonFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="0" SnapsToDevicePixels="True" Stroke="Orange" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    
    
    <!-- Window style -->
    <Style TargetType="Window">
        <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
    </Style>

    <!-- Grid style -->
    <Style TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource GridBackgroundBrush}"/>
    </Style>

    <!-- Button style -->
    <Style TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5,2"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource CommonFocusVisualStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                <Setter Property="Foreground" Value="Orange"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#555555"/>
                <Setter Property="Foreground" Value="#999999"/>
                <Setter Property="BorderBrush" Value="#777777"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Label style -->
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}"/>
    </Style>

    <!-- ComboBox style -->
    <Style TargetType="ComboBox">
        <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource CommonFocusVisualStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!-- ComboBox Border -->
                        <Border x:Name="ComboBoxBorder" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <!-- Display the selected item -->
                                <ContentPresenter Name="ContentSite" IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="3,3,23,3"
                                              VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                <!-- Editable TextBox for ComboBox -->
                                <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden"
                                     Background="{StaticResource ControlBackgroundBrush}"
                                     Foreground="{StaticResource ControlForegroundBrush}"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"/>
                                <!-- DropDown button with custom template -->
                                <ToggleButton Name="ToggleButton" Grid.Column="2" Focusable="false"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Background="Transparent"
                                          BorderBrush="Transparent"
                                          BorderThickness="0"
                                          HorizontalAlignment="Stretch" Padding="0">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border x:Name="TbBorder" Background="{TemplateBinding Background}">
                                                <Grid Background="{TemplateBinding Background}" HorizontalAlignment="Right" Width="20">
                                                    <Path x:Name="Arrow" Fill="{TemplateBinding Foreground}"
                                                      HorizontalAlignment="Center" VerticalAlignment="Center"
                                                      Data="M 0 0 L 4 4 L 8 0 Z"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter TargetName="Arrow" Property="Fill" Value="Orange"/>
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="False">
                                                    <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ControlForegroundBrush}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="Arrow" Property="Fill" Value="Orange"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter TargetName="Arrow" Property="Fill" Value="#999999"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <!-- Popup containing dropdown items -->
                                <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                    <Grid Name="DropDown" SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder" Background="{StaticResource ControlBackgroundBrush}"
                                            BorderBrush="{StaticResource ControlForegroundBrush}" BorderThickness="1"/>
                                        <ScrollViewer SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#999999"/>
                            <Setter Property="Background" Value="#555555"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ControlForegroundBrush}"/>
                            <Setter Property="Foreground" Value="Orange"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBoxItem style -->
    <Style TargetType="ComboBoxItem">
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="5,5"/>
        <Setter Property="Margin" Value="2,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                        ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="Orange"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#999999"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CheckBox style -->
    <Style TargetType="CheckBox">
        <Setter Property="FocusVisualStyle" Value="{StaticResource CommonFocusVisualStyle}"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Grid x:Name="EnabledState" Width="17" Height="14">
                                    <Rectangle x:Name="UncheckedBox" Width="12" Height="12" 
                                           HorizontalAlignment="Left" VerticalAlignment="Center"
                                           Fill="#999999" Stroke="#555555" StrokeThickness="1"/>
                                    <Rectangle x:Name="CheckedBox" Width="12" Height="12" 
                                           HorizontalAlignment="Left" VerticalAlignment="Center"
                                           Fill="White" Stroke="#999999" StrokeThickness="1"/>
                                    <Path x:Name="CheckMark" IsHitTestVisible="False" SnapsToDevicePixels="False" 
                                      StrokeThickness="2" Data="M 3 5 L 5 8 L 13 0" Stroke="DarkOrange"/>
                                </Grid>
                                <Grid x:Name="DisabledState" Width="17">
                                    <Rectangle Width="12" Height="12" 
                                           HorizontalAlignment="Left" VerticalAlignment="Center"
                                           Fill="WhiteSmoke" Stroke="#555555" StrokeThickness="1" StrokeDashArray="1,3"/>
                                </Grid>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <BulletDecorator.Child>
                            <ContentPresenter/>
                        </BulletDecorator.Child>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="EnabledState" Property="Visibility" Value="Visible" />
                            <Setter TargetName="DisabledState" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="EnabledState" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="DisabledState" Property="Visibility" Value="Visible" />
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="UncheckedBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckedBox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="UncheckedBox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckedBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="UncheckedBox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckedBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Orange"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
